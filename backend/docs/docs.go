// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/test/auth/delete": {
            "get": {
                "description": "删除一个token，即退出该用户在该机器上的登录",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test/auth"
                ],
                "summary": "删除token",
                "parameters": [
                    {
                        "description": "token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.tokenInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "空"
                    },
                    "400": {
                        "description": "请求格式错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    }
                }
            }
        },
        "/test/auth/deleteall": {
            "get": {
                "description": "删除一个用户的所有token，即退出该用户在所有机器上的登录",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test/auth"
                ],
                "summary": "删除所有token",
                "parameters": [
                    {
                        "description": "token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.useridInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "空"
                    },
                    "400": {
                        "description": "请求格式错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    }
                }
            }
        },
        "/test/auth/deliver": {
            "get": {
                "description": "对于给定的userid，为它分发一个token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test/auth"
                ],
                "summary": "获取token",
                "parameters": [
                    {
                        "description": "用户id",
                        "name": "userid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.useridInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "$ref": "#/definitions/handler.tokenInput"
                        }
                    },
                    "400": {
                        "description": "请求格式错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    }
                }
            }
        },
        "/test/auth/verify": {
            "get": {
                "description": "验证一个token是否有效，以及属于哪个用户。会自动为token续期",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test/auth"
                ],
                "summary": "验证token",
                "parameters": [
                    {
                        "description": "token",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.tokenInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "结果",
                        "schema": {
                            "$ref": "#/definitions/handler.verifyOutput"
                        }
                    },
                    "400": {
                        "description": "请求格式错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    },
                    "500": {
                        "description": "服务器错误",
                        "schema": {
                            "$ref": "#/definitions/handler.errorReturn"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.errorReturn": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.tokenInput": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.useridInput": {
            "type": "object",
            "required": [
                "userid"
            ],
            "properties": {
                "userid": {
                    "type": "integer"
                }
            }
        },
        "handler.verifyOutput": {
            "type": "object",
            "properties": {
                "res": {
                    "type": "boolean"
                },
                "userid": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
