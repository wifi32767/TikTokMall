definitions:
  handler.addItemReq:
    properties:
      item:
        $ref: '#/definitions/handler.cartItem'
      userid:
        type: integer
    required:
    - item
    - userid
    type: object
  handler.address:
    properties:
      city:
        type: string
      country:
        type: string
      state:
        type: string
      street_address:
        type: string
      zip_code:
        type: integer
    required:
    - city
    - country
    - state
    - street_address
    - zip_code
    type: object
  handler.cartItem:
    properties:
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - product_id
    - quantity
    type: object
  handler.checkoutReq:
    properties:
      address:
        $ref: '#/definitions/handler.address'
      credit_card:
        properties:
          credit_card_cvv:
            type: integer
          credit_card_expiration_month:
            type: integer
          credit_card_expiration_year:
            type: integer
          credit_card_number:
            type: string
        required:
        - credit_card_cvv
        - credit_card_expiration_month
        - credit_card_expiration_year
        - credit_card_number
        type: object
      email:
        type: string
      user_id:
        type: integer
    required:
    - email
    - user_id
    type: object
  handler.checkoutResp:
    properties:
      order_id:
        type: string
      transaction_id:
        type: string
    type: object
  handler.errorReturn:
    properties:
      error:
        type: string
    type: object
  handler.grantReq:
    properties:
      permission:
        type: integer
      user_id:
        type: integer
    required:
    - permission
    - user_id
    type: object
  handler.idReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  handler.item:
    properties:
      cost:
        type: number
      product_id:
        type: integer
      quantity:
        type: integer
    required:
    - cost
    - product_id
    - quantity
    type: object
  handler.orderDetails:
    properties:
      address:
        $ref: '#/definitions/handler.address'
      created_at:
        description: 时间戳
        type: integer
      email:
        type: string
      order_id:
        type: string
      user_currency:
        type: string
      user_id:
        type: integer
    type: object
  handler.orderIdReq:
    properties:
      order_id:
        type: string
      user_id:
        type: integer
    required:
    - order_id
    - user_id
    type: object
  handler.orderListRes:
    properties:
      orders:
        items:
          $ref: '#/definitions/handler.orderDetails'
        type: array
    required:
    - orders
    type: object
  handler.orderPlaceReq:
    properties:
      address:
        $ref: '#/definitions/handler.address'
      items:
        items:
          $ref: '#/definitions/handler.item'
        type: array
      user_currency:
        type: string
      user_id:
        type: integer
    required:
    - items
    - user_currency
    - user_id
    type: object
  handler.productCreateReq:
    properties:
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      name:
        type: string
      picture:
        type: string
      price:
        type: number
    required:
    - description
    - name
    - picture
    - price
    type: object
  handler.productListReq:
    properties:
      category_name:
        type: string
      page:
        type: integer
      page_size:
        type: integer
    required:
    - page
    - page_size
    type: object
  handler.registerReq:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.searchReq:
    properties:
      query:
        type: string
    required:
    - query
    type: object
  handler.simpleProduct:
    properties:
      categories:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      picture:
        type: string
      price:
        type: number
    required:
    - id
    type: object
  handler.updateReq:
    properties:
      new_password:
        type: string
      old_password:
        type: string
      username:
        type: string
    required:
    - new_password
    - old_password
    - username
    type: object
  handler.userIdReq:
    properties:
      user_id:
        type: integer
    required:
    - user_id
    type: object
  test_handler.errorReturn:
    properties:
      error:
        type: string
    type: object
  test_handler.tokenInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  test_handler.updateOrderStateReq:
    properties:
      order_id:
        type: string
      state:
        type: string
      user_id:
        type: integer
    type: object
  test_handler.useridInput:
    properties:
      userid:
        type: integer
    required:
    - userid
    type: object
  test_handler.verifyOutput:
    properties:
      res:
        type: boolean
      userid:
        type: integer
    type: object
info:
  contact: {}
paths:
  /api/checkout:
    post:
      consumes:
      - application/json
      description: 结算购物车，生成订单并支付
      parameters:
      - description: 结算请求
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.checkoutReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
          schema:
            $ref: '#/definitions/handler.checkoutResp'
        "400":
          description: 请求信息错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 结算
      tags:
      - Checkout
  /cart/additem:
    post:
      description: 添加商品到指定用户的购物车
      parameters:
      - description: 商品和用户信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.addItemReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 添加商品到购物车
      tags:
      - cart
  /cart/empty:
    post:
      description: 清空指定用户的购物车
      parameters:
      - description: 用户id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.userIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 清空购物车
      tags:
      - cart
  /cart/get:
    get:
      description: 获取指定用户的购物车中的商品
      parameters:
      - description: 用户id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.userIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 购物车中的商品
          schema:
            items:
              $ref: '#/definitions/handler.cartItem'
            type: array
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 获取购物车
      tags:
      - cart
  /order/cancel:
    put:
      parameters:
      - description: 订单id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.orderIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      tags:
      - order
  /order/list:
    get:
      description: 获取用户的订单列表
      parameters:
      - description: 用户id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.userIdReq'
      produces:
      - application/json
      responses:
        "200":
          description: 订单列表
          schema:
            $ref: '#/definitions/handler.orderListRes'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 订单列表
      tags:
      - order
  /order/place:
    post:
      description: 创建一个新的订单
      parameters:
      - description: 订单信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.orderPlaceReq'
      produces:
      - application/json
      responses:
        "200":
          description: 订单id
          schema:
            $ref: '#/definitions/handler.orderIdReq'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 创建订单
      tags:
      - order
  /product/create:
    post:
      description: 创建一个新的商品
      parameters:
      - description: 商品信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.productCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 商品id
          schema:
            $ref: '#/definitions/handler.idReq'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 创建商品
      tags:
      - product
  /product/delete:
    delete:
      description: 删除商品
      parameters:
      - description: 商品id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.idReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 删除商品
      tags:
      - product
  /product/get:
    get:
      description: 获取单个商品信息
      parameters:
      - description: 商品id
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.idReq'
      produces:
      - application/json
      responses:
        "200":
          description: 商品信息
          schema:
            $ref: '#/definitions/handler.simpleProduct'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 获取商品信息
      tags:
      - product
  /product/list:
    get:
      description: 获取指定类别的商品列表，不指定类别返回全部商品的列表
      parameters:
      - description: 商品列表信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.productListReq'
      produces:
      - application/json
      responses:
        "200":
          description: 商品列表
          schema:
            $ref: '#/definitions/handler.productListReq'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 商品列表
      tags:
      - product
  /product/search:
    get:
      description: 搜索在名字和描述中含有关键词的商品
      parameters:
      - description: 搜索关键词
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.searchReq'
      produces:
      - application/json
      responses:
        "200":
          description: 商品信息
          schema:
            $ref: '#/definitions/handler.simpleProduct'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 商品搜索
      tags:
      - product
  /product/update:
    put:
      description: 更新商品信息
      parameters:
      - description: 商品信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.simpleProduct'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 更新商品信息
      tags:
      - product
  /test/auth/delete:
    get:
      description: 删除一个token，即退出该用户在该机器上的登录
      parameters:
      - description: token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/test_handler.tokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
      summary: 删除token
      tags:
      - test/auth
  /test/auth/deleteall:
    get:
      description: 删除一个用户的所有token，即退出该用户在所有机器上的登录
      parameters:
      - description: token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/test_handler.useridInput'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
      summary: 删除所有token
      tags:
      - test/auth
  /test/auth/deliver:
    get:
      description: 对于给定的userid，为它分发一个token
      parameters:
      - description: 用户id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/test_handler.useridInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            $ref: '#/definitions/test_handler.tokenInput'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
      summary: 获取token
      tags:
      - test/auth
  /test/auth/verify:
    get:
      description: 验证一个token是否有效，以及属于哪个用户。会自动为token续期
      parameters:
      - description: token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/test_handler.tokenInput'
      produces:
      - application/json
      responses:
        "200":
          description: 结果
          schema:
            $ref: '#/definitions/test_handler.verifyOutput'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/test_handler.errorReturn'
      summary: 验证token
      tags:
      - test/auth
  /test/order/update:
    get:
      consumes:
      - application/json
      description: 更新订单状态
      parameters:
      - description: 请求参数
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/test_handler.updateOrderStateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: 更新订单状态
      tags:
      - test_order
  /user/delete:
    delete:
      description: 删除一个账户
      parameters:
      - description: 删除信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 删除账户
      tags:
      - user
  /user/grant:
    put:
      description: 修改一个账户的权限
      parameters:
      - description: 用户ID
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.grantReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 授权用户
      tags:
      - user
  /user/login:
    post:
      description: 登录一个账户
      parameters:
      - description: 登录信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 登录
      tags:
      - user
  /user/logout:
    post:
      description: 登出一个账户
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 登出
      tags:
      - user
  /user/register:
    post:
      description: 注册一个新的账户
      parameters:
      - description: 注册信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户id
          schema:
            $ref: '#/definitions/handler.userIdReq'
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 注册账户
      tags:
      - user
  /user/update:
    put:
      description: 修改一个账户的密码
      parameters:
      - description: 修改信息
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.updateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功
        "400":
          description: 请求格式错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
        "500":
          description: 服务器错误
          schema:
            $ref: '#/definitions/handler.errorReturn'
      summary: 修改密码
      tags:
      - user
swagger: "2.0"
